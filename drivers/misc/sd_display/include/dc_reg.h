/*
 * Copyright (c) Semidrive
 */
#pragma once

#include "__regs_ap_dc.h"

/* DC registers (RMW mode) definition */

#define REG(x)                           (x)
/* CTRL */
#define DC_CTRL                          REG(REG_AP_APB_DC_DC_CTRL)
#define DC_CTRL_SW_RST_SHIFT             DC_CTRL_SW_RST_FIELD_OFFSET
#define DC_CTRL_SW_RST_MASK              1UL << DC_CTRL_SW_RST_SHIFT
#define DC_CTRL_MS_MODE_SHIFT            DC_CTRL_MS_MODE_FIELD_OFFSET
#define DC_CTRL_MS_MODE_MASK             0x1 << DC_CTRL_MS_MODE_SHIFT
#define DC_CTRL_SF_MODE_SHIFT            DC_CTRL_SF_MODE_FIELD_OFFSET
#define DC_CTRL_SF_MODE_MASK             1UL << DC_CTRL_SF_MODE_SHIFT
#define DC_CTRL_UNDERRUN_CLR_MODE_SHIFT  DC_CTRL_UNDERRUN_CLR_MODE_FIELD_OFFSET
#define DC_CTRL_UNDERRUN_CLR_MODE_MASK   1UL << DC_CTRL_UNDERRUN_CLR_MODE_SHIFT
#define DC_CTRL_MLC_DISCARD_MODE_SHIFT   DC_CTRL_MLC_DISCARD_MODE_FIELD_OFFSET
#define DC_CTRL_MLC_DISCARD_MODE_MASK    1UL << DC_CTRL_MLC_DISCARD_MODE_SHIFT


/* FLC */
#define DC_FLC_CTRL                      REG(REG_AP_APB_DC_DC_FLC_CTRL)
#define CRC32_TRIG_SHIFT                 DC_FLC_CTRL_CRC32_TRIG_FIELD_OFFSET
#define CRC32_TRIG_MASK                  1UL << CRC32_TRIG_SHIFT

#define TCON_TRIG_SHIFT                  DC_FLC_CTRL_TCON_TRIG_FIELD_OFFSET
#define TCON_TRIG_MASK                   1UL << TCON_TRIG_SHIFT

#define DI_TRIG_SHIFT                    DC_FLC_CTRL_DI_TRIG_FIELD_OFFSET
#define DI_TRIG_MASK                     1UL << DI_TRIG_SHIFT

#define FLC_TRIG_SHIFT                   DC_FLC_CTRL_FLC_TRIG_FIELD_OFFSET
#define FLC_TRIG_MASK                    1 << FLC_TRIG_SHIFT

#define DC_FLC_UPDATE                    REG(REG_AP_APB_DC_DC_FLC_UPDATE)
#define DC_FLC_UPDATE_FORCE_SHIFT        DC_FLC_UPDATE_FORCE_FIELD_OFFSET
#define DC_FLC_UPDATE_FORCE_MASK         1UL << DC_FLC_UPDATE_FORCE_SHIFT

#define DC_INT_MASK                      REG(REG_AP_APB_DC_DC_INT_MASK)
#define DC_INT_STATUS                    REG(REG_AP_APB_DC_DC_INT_STATUS)

#define RDMA_SHIFT                       DC_INT_MASK_RDMA_FIELD_OFFSET
#define RDMA_MASK                        1UL << RDMA_SHIFT

#define RLE_SHIFT                        DC_INT_MASK_RLE_FIELD_OFFSET
#define RLE_MASK                         1UL << RLE_SHIFT

#define MLC_SHIFT                        DC_INT_MASK_MLC_FIELD_OFFSET
#define MLC_MASK                         1UL << MLC_SHIFT

#define TCON_SOF_SHIFT                   DC_INT_MASK_TCON_SOF_FIELD_OFFSET
#define TCON_SOF_MASK                    1UL << TCON_SOF_SHIFT

#define TCON_EOF_SHIFT                   DC_INT_MASK_TCON_EOF_FIELD_OFFSET
#define TCON_EOF_MASK                    1UL << TCON_EOF_SHIFT

#define TCON_UNDERRUN_SHIFT              DC_INT_MASK_TCON_UNDERRUN_FIELD_OFFSET
#define TCON_UNDERRUN_MASK               1UL << TCON_UNDERRUN_SHIFT

#define DC_UNDERRUN_SHIFT                DC_INT_MASK_DC_UNDERRUN_FIELD_OFFSET
#define DC_UNDERRUN_MASK                 1UL << DC_UNDERRUN_SHIFT

#define SDMA_DONE_SHIFT                  DC_INT_MASK_SDMA_DONE_FIELD_OFFSET
#define SDMA_DONE_MASK                   1UL << SDMA_DONE_SHIFT

#define TCON_LAYER_KICK_SHIFT            DC_INT_MASK_TCON_LAYER_KICK_FIELD_OFFSET
#define TCON_LAYER_KICK_MASK             0xFFFFF << TCON_LAYER_KICK_SHIFT

#define DC_SF_FLC_CTRL                   REG(REG_AP_APB_DC_DC_SF_FLC_CTRL)
#define DC_SF_INT_MASK                   REG(REG_AP_APB_DC_DC_SF_INT_MASK)
#define DC_SF_INT_STATUS                 REG(REG_AP_APB_DC_DC_SF_INT_STATUS)
//offset definition see DC_FLC_xxx

/* RDMA */
#define CHN_JMP 0x20
#define CHN_COUNT 4
#define RDMA_DFIFO_WML_(i)                (REG(REG_AP_APB_DC_RDMA_DFIFO_WML) + CHN_JMP * i)
#define RDMA_DFIFO_WML_SHIFT              RDMA_DFIFO_WML_WML_FIELD_OFFSET
#define RDMA_DFIFO_WML_MASK               (0xFFFF << RDMA_DFIFO_WML_SHIFT)

#define RDMA_DFIFO_DEPTH_(i)              (REG(REG_AP_APB_DC_RDMA_DFIFO_DEPTH) + CHN_JMP * i)
#define RDMA_DFIFO_DEPTH_SHIFT            RDMA_DFIFO_DEPTH_DEPTH_FIELD_OFFSET
#define RDMA_DFIFO_DEPTH_MASK             (0xFFFF << RDMA_DFIFO_DEPTH_SHIFT)


#define RDMA_CFIFO_DEPTH_(i)              (REG(REG_AP_APB_DC_RDMA_CFIFO_DEPTH) + CHN_JMP * i)
#define RDMA_CFIFO_DEPTH_SHIFT            RDMA_CFIFO_DEPTH_DEPTH_FIELD_OFFSET
#define RDMA_CFIFO_DEPTH_MASK             (0xFFFF << RDMA_DFIFO_DEPTH_SHIFT)

#define RDMA_CH_PRIO_(i)                  (REG(REG_AP_APB_DC_RDMA_CH_PRIO) + CHN_JMP * i)
#define RDMA_CH_PRIO_SCHE_SHIFT           RDMA_CH_PRIO_SCHE_FIELD_OFFSET
#define RDMA_CH_PRIO_SCHE_MASK            0x3f << RDMA_CH_PRIO_SCHE_SHIFT
#define RDMA_CH_PRIO_P1_SHIFT             RDMA_CH_PRIO_P1_FIELD_OFFSET
#define RDMA_CH_PRIO_P1_MASK              0x3f << RDMA_CH_PRIO_P1_SHIFT
#define RDMA_CH_PRIO_P0_SHIFT             RDMA_CH_PRIO_P0_FIELD_OFFSET
#define RDMA_CH_PRIO_P0_MASK              0x3f << RDMA_CH_PRIO_P0_SHIFT


#define RDMA_BURST_(i)                    (REG(REG_AP_APB_DC_RDMA_BURST) + CHN_JMP * i)
#define RDMA_BURST_MODE_SHIFT             RDMA_BURST_MODE_FIELD_OFFSET
#define RDMA_BURST_MODE_MASK              0x1UL << RDMA_BURST_MODE_SHIFT
#define RDMA_BURST_LEN_SHIFT              RDMA_BURST_LEN_FIELD_OFFSET
#define RDMA_BURST_LEN_MASK               0x7UL << RDMA_BURST_LEN_SHIFT

#define RDMA_AXI_USER_(i)                 (REG(REG_AP_APB_DC_RDMA_AXI_USER) + CHN_JMP * i)
#define RDMA_AXI_USER_SHIFT               RDMA_AXI_USER_USER_FIELD_OFFSET
#define RDMA_AXI_USER_MASK                0xFFFFF << RDMA_AXI_USER_SHIFT

#define RDMA_AXI_CTRL_(i)                 (REG(REG_AP_APB_DC_RDMA_AXI_CTRL) + CHN_JMP * i)
#define RDMA_AXI_CTRL_PORT_SHIFT          RDMA_AXI_CTRL_PROT_FIELD_OFFSET
#define RDMA_AXI_CTRL_PORT_MASK           0x3 << RDMA_AXI_CTRL_PORT_SHIFT
#define RDMA_AXI_CTRL_CACHE_SHIFT         RDMA_AXI_CTRL_CACHE_FIELD_OFFSET
#define RDMA_AXI_CTRL_CACHE_MASK          0xF << RDMA_AXI_CTRL_CACHE_SHIFT

#define RDMA_CTRL                        REG(REG_AP_APB_DC_RDMA_CTRL)
#define RDMA_CTRL_CFG_LOAD_SHIFT         RDMA_CTRL_CFG_LOAD_FIELD_OFFSET
#define RDMA_CTRL_CFG_LOAD_MASK          0x1UL << RDMA_CTRL_CFG_LOAD_SHIFT
#define RDMA_CTRL_ARB_SEL_SHIFT          RDMA_CTRL_ARB_SEL_FIELD_OFFSET
#define RDMA_CTRL_ARB_SEL_MASK           0x1UL << RDMA_CTRL_ARB_SEL_SHIFT

#define RDMA_DFIFO_FULL                  REG(REG_AP_APB_DC_RDMA_DFIFO_FULL)
#define RDMA_DFIFO_EMPTY                 REG(REG_AP_APB_DC_RDMA_DFIFO_EMPTY)
#define RDMA_CFIFO_FULL                  REG(REG_AP_APB_DC_RDMA_CFIFO_FULL)
#define RDMA_CFIFO_EMPTY                 REG(REG_AP_APB_DC_RDMA_CFIFO_EMPTY)
#define RDMA_CH_IDLE                     REG(REG_AP_APB_DC_RDMA_CH_IDLE)
#define RDMA_INT_MASK                    REG(REG_AP_APB_DC_RDMA_INT_MASK)
#define RDMA_INT_STATUS                  REG(REG_AP_APB_DC_RDMA_INT_STATUS)
#define RDMA_CH_6_SHIFT                  RDMA_DFIFO_FULL_CH_6_FIELD_OFFSET
#define RDMA_CH_6_MASK                   1UL << RDMA_CH_6_SHIFT
#define RDMA_CH_5_SHIFT                  RDMA_DFIFO_FULL_CH_5_FIELD_OFFSET
#define RDMA_CH_5_MASK                   1UL << RDMA_CH_5_SHIFT
#define RDMA_CH_4_SHIFT                  RDMA_DFIFO_FULL_CH_4_FIELD_OFFSET
#define RDMA_CH_4_MASK                   1UL << RDMA_CH_4_SHIFT
#define RDMA_CH_3_SHIFT                  RDMA_DFIFO_FULL_CH_3_FIELD_OFFSET
#define RDMA_CH_3_MASK                   1UL << RDMA_CH_3_SHIFT
#define RDMA_CH_2_SHIFT                  RDMA_DFIFO_FULL_CH_2_FIELD_OFFSET
#define RDMA_CH_2_MASK                   1UL << RDMA_CH_2_SHIFT
#define RDMA_CH_1_SHIFT                  RDMA_DFIFO_FULL_CH_1_FIELD_OFFSET
#define RDMA_CH_1_MASK                   1UL << RDMA_CH_1_SHIFT
#define RDMA_CH_0_SHIFT                  RDMA_DFIFO_FULL_CH_0_FIELD_OFFSET
#define RDMA_CH_0_MASK                   1UL << RDMA_CH_0_SHIFT

#define RDMA_DEBUG_CTRL                  REG(REG_AP_APB_DC_RDMA_DEBUG_CTRL)
#define RDMA_SEL_SHIFT                   RDMA_DEBUG_CTRL_DEBUG_SEL_FIELD_OFFSET
#define RDMA_SEL_MASK                    0xF << RDMA_SEL_SHIFT
#define RDMA_DEBUG_STA                   REG(REG_AP_APB_DC_RDMA_DEBUG_STA)
#define RDMA_CFIFO_DEP_SHIFT             RDMA_DEBUG_STA_CFIFO_DEP_FIELD_OFFSET
#define RDMA_CFIFO_DEP_MASK              0xFFFF << RDMA_CFIFO_DEP_SHIFT
#define RDMA_DFIFO_DEP_SHIFT             RDMA_DEBUG_STA_DFIFO_DEP_FIELD_OFFSET
#define RDMA_DFIFO_DEP_MASK              0xFFFF << RDMA_DFIFO_DEP_SHIFT

#define S_RDMA_DFIFO_WML_(i)               (REG(REG_AP_APB_DC_S_RDMA_DFIFO_WML) + CHN_JMP * i)
#define S_RDMA_DFIFO_DEPTH_(i)             (REG(REG_AP_APB_DC_S_RDMA_DFIFO_DEPTH) + CHN_JMP * i)
#define S_RDMA_CFIFO_DEPTH_(i)             (REG(REG_AP_APB_DC_S_RDMA_CFIFO_DEPTH) + CHN_JMP * i)
#define S_RDMA_CH_PRIO_(i)                 (REG(REG_AP_APB_DC_S_RDMA_CH_PRIO) + CHN_JMP * i)
#define S_RDMA_BURST_(i)                   (REG(REG_AP_APB_DC_S_RDMA_BURST) + CHN_JMP * i)
#define S_RDMA_AXI_USER_(i)                (REG(REG_AP_APB_DC_S_RDMA_AXI_USER) + CHN_JMP * i)
#define S_RDMA_AXI_CTRL_(i)                (REG(REG_AP_APB_DC_S_RDMA_AXI_CTRL) + CHN_JMP * i)
#define S_RDMA_CTRL                        REG(REG_AP_APB_DC_S_RDMA_CTRL)
#define S_RDMA_DFIFO_FULL                  REG(REG_AP_APB_DC_S_RDMA_DFIFO_FULL)
#define S_RDMA_DFIFO_EMPTY                 REG(REG_AP_APB_DC_S_RDMA_DFIFO_EMPTY)
#define S_RDMA_CFIFO_FULL                  REG(REG_AP_APB_DC_S_RDMA_CFIFO_FULL)
#define S_RDMA_CFIFO_EMPTY                 REG(REG_AP_APB_DC_S_RDMA_CFIFO_EMPTY)
#define S_RDMA_CH_IDLE                     REG(REG_AP_APB_DC_S_RDMA_CH_IDLE)
#define S_RDMA_INT_MASK                    REG(REG_AP_APB_DC_S_RDMA_INT_MASK)
#define S_RDMA_INT_STATUS                  REG(REG_AP_APB_DC_S_RDMA_INT_STATUS)
#define S_RDMA_DEBUG_CTRL                  REG(REG_AP_APB_DC_S_RDMA_DEBUG_CTRL)
#define S_RDMA_DEBUG_STA                   REG(REG_AP_APB_DC_S_RDMA_DEBUG_STA)

/* GP */
#define GP_JMP                          0x1000
#define GP_COUNT                        1
#define DC_GP_PIX_CIMP_(i)              (REG(REG_AP_APB_DC_DC_GP_PIX_COMP) + GP_JMP * i)
#define BPV_SHIFT                       DC_GP_PIX_COMP_BPV_FIELD_OFFSET
#define BPV_MASK                        0xF << BPV_SHIFT
#define BPU_SHIFT                       DC_GP_PIX_COMP_BPU_FIELD_OFFSET
#define BPU_MASK                        0xF << BPU_SHIFT
#define BPY_SHIFT                       DC_GP_PIX_COMP_BPY_FIELD_OFFSET
#define BPY_MASK                        0x1F << BPY_SHIFT
#define BPA_SHIFT                       DC_GP_PIX_COMP_BPA_FIELD_OFFSET
#define BPA_MASK                        0xF << BPA_SHIFT

#define DC_GP_FRM_CTRL_(i)              (REG(REG_AP_APB_DC_DC_GP_FRM_CTRL) + GP_JMP * i)
#define ENDIAN_CTRL_SHIFT               DC_GP_FRM_CTRL_ENDIAN_CTRL_FIELD_OFFSET
#define ENDIAN_CTRL_MASK                0x7 << ENDIAN_CTRL_SHIFT
#define COMP_SWAP_SHIFT                 DC_GP_FRM_CTRL_COMP_SWAP_FIELD_OFFSET
#define COMP_SWAP_MASK                  0xF << COMP_SWAP_SHIFT
#define ROT_SHIFT                       DC_GP_FRM_CTRL_ROT_FIELD_OFFSET
#define ROT_MASK                        0x7 << ROT_SHIFT
#define RGB_YUV_SHIFT                   DC_GP_FRM_CTRL_RGB_YUV_FIELD_OFFSET
#define RGB_YUV_MASK                    1UL << RGB_YUV_SHIFT
#define UV_SWAP_SHIFT                   DC_GP_FRM_CTRL_UV_SWAP_FIELD_OFFSET
#define UV_SWAP_MASK                    1 << UV_SWAP_SHIFT
#define UV_MODE_SHIFT                   DC_GP_FRM_CTRL_UV_MODE_FIELD_OFFSET
#define UV_MODE_MASK                    0x3 << UV_MODE_SHIFT
#define MODE_SHIFT                      DC_GP_FRM_CTRL_MODE_FIELD_OFFSET
#define MODE_MASK                       0x3 << MODE_SHIFT
#define FMT_SHIFT                       DC_GP_FRM_CTRL_FMT_FIELD_OFFSET
#define FMT_MASK                        0x3 << FMT_SHIFT

#define DC_GP_FRM_SIZE_(i)              (REG(REG_AP_APB_DC_DC_GP_FRM_SIZE) + GP_JMP * i)
#define FRM_HEIGHT_SHIFT                DC_GP_FRM_SIZE_HEIGHT_FIELD_OFFSET
#define FRM_HEIGHT_MASK                 0xFFFF << FRM_HEIGHT_SHIFT
#define FRM_WIDTH_SHIFT                 DC_GP_FRM_SIZE_WIDTH_FIELD_OFFSET
#define FRM_WIDTH_MASK                  0xFFFF << FRM_WIDTH_SHIFT

#define DC_GP_Y_BADDR_L_(i)             (REG(REG_AP_APB_DC_DC_GP_Y_BADDR_L) + GP_JMP * i)
#define BADDR_L_Y_SHIFT                 DC_GP_Y_BADDR_L_Y_FIELD_OFFSET
#define BADDR_L_Y_MASK                  0xFFFFFFFF << BADDR_L_Y_SHIFT

#define DC_GP_Y_BADDR_H_(i)             (REG(REG_AP_APB_DC_DC_GP_Y_BADDR_H) + GP_JMP * i)
#define BADDR_H_Y_SHIFT                 DC_GP_Y_BADDR_H_Y_FIELD_OFFSET
#define BADDR_H_Y_MASK                  0xFF << BADDR_H_Y_SHIFT

#define DC_GP_U_BADDR_L_(i)             (REG(REG_AP_APB_DC_DC_GP_U_BADDR_L) + GP_JMP * i)
#define BADDR_L_U_SHIFT                 DC_GP_U_BADDR_L_U_FIELD_OFFSET
#define BADDR_L_U_MASK                  0xFFFFFFFF << BADDR_L_U_SHIFT

#define DC_GP_U_BADDR_H_(i)             (REG(REG_AP_APB_DC_DC_GP_U_BADDR_H) + GP_JMP * i)
#define BADDR_H_U_SHIFT                 DC_GP_U_BADDR_H_U_FIELD_OFFSET
#define BADDR_H_U_MASK                  0xFF << BADDR_H_U_SHIFT

#define DC_GP_V_BADDR_L_(i)             (REG(REG_AP_APB_DC_DC_GP_V_BADDR_L) + GP_JMP * i)
#define BADDR_L_V_SHIFT                 DC_GP_V_BADDR_L_V_FIELD_OFFSET
#define BADDR_L_V_MASK                  0xFFFFFFFF << BADDR_L_V_SHIFT

#define DC_GP_V_BADDR_H_(i)             (REG(REG_AP_APB_DC_DC_GP_V_BADDR_H) + GP_JMP * i)
#define BADDR_H_V_SHIFT                 DC_GP_V_BADDR_H_V_FIELD_OFFSET
#define BADDR_H_V_MASK                  0xFF << BADDR_H_V_SHIFT

#define DC_GP_Y_STRIDE_(i)              (REG(REG_AP_APB_DC_DC_GP_Y_STRIDE) + GP_JMP * i)
#define STRIDE_Y_SHIFT                  DC_GP_Y_STRIDE_Y_FIELD_OFFSET
#define STRIDE_Y_MASK                   0x3FFFFUL << STRIDE_Y_SHIFT

#define DC_GP_U_STRIDE_(i)              (REG(REG_AP_APB_DC_DC_GP_U_STRIDE) + GP_JMP * i)
#define STRIDE_U_SHIFT                  DC_GP_U_STRIDE_U_FIELD_OFFSET
#define STRIDE_U_MASK                   0x3FFFFUL << STRIDE_U_SHIFT

#define DC_GP_V_STRIDE_(i)              (REG(REG_AP_APB_DC_DC_GP_V_STRIDE) + GP_JMP * i)
#define STRIDE_V_SHIFT                  DC_GP_V_STRIDE_V_FIELD_OFFSET
#define STRIDE_V_MASK                   0x3FFFFUL << STRIDE_V_SHIFT

#define DC_GP_FRM_OFFSET_(i)            (REG(REG_AP_APB_DC_DC_GP_FRM_OFFSET) + GP_JMP * i)
#define FRM_Y_SHIFT                     DC_GP_FRM_OFFSET_Y_FIELD_OFFSET
#define FRM_Y_MASK                      0xFFFFUL << FRM_Y_SHIFT
#define FRM_X_SHIFT                     DC_GP_FRM_OFFSET_X_FIELD_OFFSET
#define FRM_X_MASK                      0xFFFFUL << FRM_X_SHIFT

#define DC_GP_YUVUP_CTRL_(i)            (REG(REG_AP_APB_DC_DC_GP_YUVUP_CTRL) + GP_JMP * i)
#define DC_GP_YUVUP_EN_SHIFT            DC_GP_YUVUP_CTRL_EN_FIELD_OFFSET
#define DC_GP_YUVUP_EN_MASK             0x1 << DC_GP_YUVUP_EN_SHIFT
#define DC_GP_YUVUP_VOFSET_SHIFT        DC_GP_YUVUP_CTRL_VOFSET_FIELD_OFFSET
#define DC_GP_YUVUP_VOFSET_MASK         0x3 << DC_GP_YUVUP_VOFSET_SHIFT
#define DC_GP_YUVUP_HOFSET_SHIFT        DC_GP_YUVUP_CTRL_HOFSET_FIELD_OFFSET
#define DC_GP_YUVUP_HOFSET_MASK         0x3 << DC_GP_YUVUP_HOFSET_SHIFT
#define DC_GP_YUVUP_FILTER_MODE_SHIFT   DC_GP_YUVUP_CTRL_FILTER_MODE_FIELD_OFFSET
#define DC_GP_YUVUP_FILTER_MODE_MASK    0x1 << DC_GP_YUVUP_FILTER_MODE_SHIFT
#define DC_GP_YUVUP_UPV_BYPASS_SHIFT    DC_GP_YUVUP_CTRL_UPV_BYPASS_FIELD_OFFSET
#define DC_GP_YUVUP_UPV_BYPASS_MASK     0x1 << DC_GP_YUVUP_UPV_BYPASS_SHIFT
#define DC_GP_YUVUP_UPH_BYPASS_SHIFT    DC_GP_YUVUP_CTRL_UPH_BYPASS_FIELD_OFFSET
#define DC_GP_YUVUP_UPH_BYPASS_MASK     0x1 << DC_GP_YUVUP_UPH_BYPASS_SHIFT
#define DC_GP_YUVUP_BYPASS_SHIFT        DC_GP_YUVUP_CTRL_BYPASS_FIELD_OFFSET
#define DC_GP_YUVUP_BYPASS_MASK         0x1 << DC_GP_YUVUP_BYPASS_SHIFT

/*GP CSC*/
#define GP_CSC_CTRL_(i)                 (REG(REG_AP_APB_DC_GP_CSC_CTRL) + GP_JMP * i)
#define GP_CSC_ALPHA_SHIFT              GP_CSC_CTRL_ALPHA_FIELD_OFFSET
#define GP_CSC_ALPHA_MASK               0x1 << GP_CSC_ALPHA_SHIFT
#define GP_CSC_SBUP_CONV_SHIFT          GP_CSC_CTRL_SBUP_CONV_FIELD_OFFSET
#define GP_CSC_SBUP_CONV_MASK           0x1 << GP_CSC_SBUP_CONV_SHIFT
#define GP_CSC_BYPASS_SHIFT             GP_CSC_CTRL_BYPASS_FIELD_OFFSET
#define GP_CSC_BYPASS_MASK              0x1 << GP_CSC_BYPASS_SHIFT

#define GP_CSC_COEF1_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF1) + GP_JMP * i)
#define GP_CSC_COEF1_A01_SHIFT          GP_CSC_COEF1_A01_FIELD_OFFSET
#define GP_CSC_COEF1_A01_MASK           0x3FFF << GP_CSC_COEF1_A01_SHIFT
#define GP_CSC_COEF1_A00_SHIFT          GP_CSC_COEF1_A00_FIELD_OFFSET
#define GP_CSC_COEF1_A00_MASK           0x3FFF << GP_CSC_COEF1_A00_SHIFT


#define GP_CSC_COEF2_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF2) + GP_JMP * i)
#define GP_CSC_COEF2_A10_SHIFT          GP_CSC_COEF2_A10_FIELD_OFFSET
#define GP_CSC_COEF2_A10_MASK           0x3FFF << GP_CSC_COEF2_A10_SHIFT
#define GP_CSC_COEF2_A02_SHIFT          GP_CSC_COEF2_A02_FIELD_OFFSET
#define GP_CSC_COEF2_A02_MASK           0x3FFF << GP_CSC_COEF2_A02_SHIFT


#define GP_CSC_COEF3_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF3) + GP_JMP * i)
#define GP_CSC_COEF3_A12_SHIFT          GP_CSC_COEF3_A12_FIELD_OFFSET
#define GP_CSC_COEF3_A12_MASK           0x3FFF << GP_CSC_COEF3_A12_SHIFT
#define GP_CSC_COEF3_A11_SHIFT          GP_CSC_COEF3_A11_FIELD_OFFSET
#define GP_CSC_COEF3_A11_MASK           0x3FFF << GP_CSC_COEF3_A11_SHIFT


#define GP_CSC_COEF4_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF4) + GP_JMP * i)
#define GP_CSC_COEF4_A21_SHIFT          GP_CSC_COEF4_A21_FIELD_OFFSET
#define GP_CSC_COEF4_A21_MASK           0x3FFF << GP_CSC_COEF4_A21_SHIFT
#define GP_CSC_COEF4_A20_SHIFT          GP_CSC_COEF4_A20_FIELD_OFFSET
#define GP_CSC_COEF4_A20_MASK           0x3FFF << GP_CSC_COEF4_A20_SHIFT


#define GP_CSC_COEF5_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF5) + GP_JMP * i)
#define GP_CSC_COEF5_B0_SHIFT           GP_CSC_COEF5_B0_FIELD_OFFSET
#define GP_CSC_COEF5_B0_MASK            0x3FFF << GP_CSC_COEF5_B0_SHIFT
#define GP_CSC_COEF5_A22_SHIFT          GP_CSC_COEF5_A22_FIELD_OFFSET
#define GP_CSC_COEF5_A22_MASK           0x3FFF << GP_CSC_COEF5_A22_SHIFT

#define GP_CSC_COEF6_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF6) + GP_JMP * i)
#define GP_CSC_COEF6_B2_SHIFT           GP_CSC_COEF6_B2_FIELD_OFFSET
#define GP_CSC_COEF6_B2_MASK            0x3FFF << GP_CSC_COEF6_B2_SHIFT
#define GP_CSC_COEF6_B1_SHIFT           GP_CSC_COEF6_B1_FIELD_OFFSET
#define GP_CSC_COEF6_B1_MASK            0x3FFF << GP_CSC_COEF6_B1_SHIFT

#define GP_CSC_COEF7_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF7) + GP_JMP * i)
#define GP_CSC_COEF7_C1_SHIFT           GP_CSC_COEF7_C1_FIELD_OFFSET
#define GP_CSC_COEF7_C1_MASK            0x3FF << GP_CSC_COEF7_C1_SHIFT
#define GP_CSC_COEF7_C0_SHIFT           GP_CSC_COEF7_C0_FIELD_OFFSET
#define GP_CSC_COEF7_C0_MASK            0x3FF << GP_CSC_COEF7_C0_SHIFT

#define GP_CSC_COEF8_(i)                (REG(REG_AP_APB_DC_GP_CSC_COEF8) + GP_JMP * i)
#define GP_CSC_COEF8_C2_SHIFT           GP_CSC_COEF8_C2_FIELD_OFFSET
#define GP_CSC_COEF8_C2_MASK            0x3FF << GP_CSC_COEF8_C2_SHIFT

#define GP_SDW_CTRL_(i)                 (REG(REG_AP_APB_DC_GP_SDW_CTRL) + GP_JMP * i)
#define GP_SDW_CTRL_TRIG_SHIFT          GP_SDW_CTRL_TRIG_FIELD_OFFSET
#define GP_SDW_CTRL_TRIG_MASK           1 << GP_SDW_CTRL_TRIG_SHIFT

/* SP */
#define SP_JMP        0x1000
#define SP_COUNT      2

/* SHIFT MASK define see DC_GP_XX area  */
#define DC_SP_PIX_COMP_(i)        (REG(REG_AP_APB_DC_DC_SP_PIX_COMP) + SP_JMP * i)
#define DC_SP_FRM_CTRL_(i)        (REG(REG_AP_APB_DC_DC_SP_FRM_CTRL) + SP_JMP * i)
#define DC_SP_FRM_SIZE_(i)        (REG(REG_AP_APB_DC_DC_SP_FRM_SIZE) + SP_JMP * i)
#define DC_SP_Y_BADDR_L_(i)       (REG(REG_AP_APB_DC_DC_SP_Y_BADDR_L) + SP_JMP * i)
#define DC_SP_Y_BADDR_H_(i)       (REG(REG_AP_APB_DC_DC_SP_Y_BADDR_H) + SP_JMP * i)
#define DC_SP_Y_STRIDE_(i)        (REG(REG_AP_APB_DC_DC_SP_Y_STRIDE) + SP_JMP * i)

#define DC_SP_FRM_OFFSET_(i)      (REG(REG_AP_APB_DC_DC_SP_FRM_OFFSET) + SP_JMP * i)


/* RLE */
#define RLE_Y_LEN_(i)             (REG(REG_AP_APB_DC_RLE_Y_LEN) + SP_JMP * i)
#define RLE_Y_LEN_Y_SHIFT         RLE_Y_LEN_Y_FIELD_OFFSET
#define RLE_Y_LEN_Y_MASK          0xFFFFFF << RLE_Y_LEN_Y_SHIFT

#define RLE_Y_CHECK_SUM_(i)       (REG(REG_AP_APB_DC_RLE_Y_CHECK_SUM) + SP_JMP * i)
#define RLE_Y_CHECK_SUM_Y_SHIFT   RLE_Y_CHECK_SUM_Y_FIELD_OFFSET
#define RLE_Y_CHECK_SUM_Y_MASK    0xFFFFFFFF << RLE_Y_CHECK_SUM_Y_SHIFT

#define RLE_CTRL_(i)              (REG(REG_AP_APB_DC_RLE_CTRL) + SP_JMP * i)
#define RLE_DATA_SIZE_SHIFT       RLE_CTRL_RLE_DATA_SIZE_FIELD_OFFSET
#define RLE_DATA_SIZE_MASK        0x3 << RLE_DATA_SIZE_SHIFT
#define RLE_EN_SHIFT              RLE_CTRL_RLE_EN_FIELD_OFFSET
#define RLE_EN_MASK               0x1 << RLE_EN_SHIFT

#define RLE_Y_CHECK_SUM_ST_(i)    (REG(REG_AP_APB_DC_RLE_Y_CHECK_SUM_ST) + SP_JMP * i)
#define RLE_U_CHECK_SUM_ST_(i)    (REG(REG_AP_APB_DC_RLE_U_CHECK_SUM_ST) + SP_JMP * i)
#define RLE_V_CHECK_SUM_ST_(i)    (REG(REG_AP_APB_DC_RLE_V_CHECK_SUM_ST) + SP_JMP * i)
#define RLE_A_CHECK_SUM_ST_(i)    (REG(REG_AP_APB_DC_RLE_A_CHECK_SUM_ST) + SP_JMP * i)

#define RLE_INT_MASK_(i)          (REG(REG_AP_APB_DC_RLE_INT_MASK) + SP_JMP * i)
#define RLE_INT_STATUS_(i)        (REG(REG_AP_APB_DC_RLE_INT_STATUS) + SP_JMP * i)
#define RLE_INT_V_ERR_SHIFT       RLE_INT_MASK_V_ERR_FIELD_OFFSET
#define RLE_INT_V_ERR_MASK        0x1 << RLE_INT_V_ERR_SHIFT
#define RLE_INT_U_ERR_SHIFT       RLE_INT_MASK_U_ERR_FIELD_OFFSET
#define RLE_INT_U_ERR_MASK        0x1 << RLE_INT_U_ERR_SHIFT
#define RLE_INT_Y_ERR_SHIFT       RLE_INT_MASK_Y_ERR_FIELD_OFFSET
#define RLE_INT_Y_ERR_MASK        0x1 << RLE_INT_Y_ERR_SHIFT
#define RLE_INT_A_ERR_SHIFT       RLE_INT_MASK_A_ERR_FIELD_OFFSET
#define RLE_INT_A_ERR_MASK        0x1 << RLE_INT_A_ERR_SHIFT

/* CLUT */
#define CLUT_A_CTRL_(i)        (REG(REG_AP_APB_DC_CLUT_A_CTRL) + SP_JMP * i)
#define CLUT_HAS_ALPHA_SHIFT   CLUT_A_CTRL_HAS_ALPHA_FIELD_OFFSET
#define CLUT_HAS_ALPHA_MASK    0x1 << CLUT_HAS_ALPHA_SHIFT
#define CLUT_A_Y_SEL_SHIFT     CLUT_A_CTRL_A_Y_SEL_FIELD_OFFSET
#define CLUT_A_Y_SEL_MASK      0x1 << CLUT_A_Y_SEL_SHIFT
#define CLUT_A_BYPASS_SHIFT    CLUT_A_CTRL_BYPASS_FIELD_OFFSET
#define CLUT_A_BYPASS_MASK     0x1 << CLUT_A_BYPASS_SHIFT
#define CLUT_A_OFFSET_SHIFT    CLUT_A_CTRL_OFFSET_FIELD_OFFSET
#define CLUT_A_OFFSET_MASK     0xFF << CLUT_A_OFFSET_SHIFT
#define CLUT_A_DEPTH_SHIFT     CLUT_A_CTRL_DEPTH_FIELD_OFFSET
#define CLUT_A_DEPTH_MASK      0xF << CLUT_A_DEPTH_SHIFT

#define CLUT_Y_CTRL_(i)        (REG(REG_AP_APB_DC_CLUT_Y_CTRL) + SP_JMP * i)
#define CLUT_Y_BYPASS_SHIFT    CLUT_Y_CTRL_BYPASS_FIELD_OFFSET
#define CLUT_Y_BYPASS_MASK     0x1 << CLUT_Y_BYPASS_SHIFT
#define CLUT_Y_OFFSET_SHIFT    CLUT_Y_CTRL_OFFSET_FIELD_OFFSET
#define CLUT_Y_OFFSET_MASK     0xFF << CLUT_Y_OFFSET_SHIFT
#define CLUT_Y_DEPTH_SHIFT     CLUT_Y_CTRL_DEPTH_FIELD_OFFSET
#define CLUT_Y_DEPTH_MASK      0xF << CLUT_Y_DEPTH_SHIFT

#define CLUT_U_CTRL_(i)        (REG(REG_AP_APB_DC_CLUT_U_CTRL) + SP_JMP * i)
#define CLUT_U_Y_SEL_SHIFT     CLUT_U_CTRL_U_Y_SEL_FIELD_OFFSET
#define CLUT_U_Y_SEL_MASK      0x1 << CLUT_U_Y_SEL_SHIFT
#define CLUT_U_BYPASS_SHIFT    CLUT_U_CTRL_BYPASS_FIELD_OFFSET
#define CLUT_U_BYPASS_MASK     0x1 << CLUT_U_BYPASS_SHIFT
#define CLUT_U_OFFSET_SHIFT    CLUT_U_CTRL_OFFSET_FIELD_OFFSET
#define CLUT_U_OFFSET_MASK     0xFF << CLUT_U_OFFSET_SHIFT
#define CLUT_U_DEPTH_SHIFT     CLUT_U_CTRL_DEPTH_FIELD_OFFSET
#define CLUT_U_DEPTH_MASK      0xF << CLUT_U_DEPTH_SHIFT

#define CLUT_V_CTRL_(i)        (REG(REG_AP_APB_DC_CLUT_V_CTRL) + SP_JMP * i)
#define CLUT_V_Y_SEL_SHIFT     CLUT_V_CTRL_V_Y_SEL_FIELD_OFFSET
#define CLUT_V_Y_SEL_MASK      0x1 << CLUT_V_Y_SEL_SHIFT
#define CLUT_V_BYPASS_SHIFT    CLUT_V_CTRL_BYPASS_FIELD_OFFSET
#define CLUT_V_BYPASS_MASK     0x1 << CLUT_V_BYPASS_SHIFT
#define CLUT_V_OFFSET_SHIFT    CLUT_V_CTRL_OFFSET_FIELD_OFFSET
#define CLUT_V_OFFSET_MASK     0xFF << CLUT_V_OFFSET_SHIFT
#define CLUT_V_DEPTH_SHIFT     CLUT_V_CTRL_DEPTH_FIELD_OFFSET
#define CLUT_V_DEPTH_MASK      0xF << CLUT_V_DEPTH_SHIFT

#define CLUT_READ_CTRL_(i)     (REG(REG_AP_APB_DC_CLUT_READ_CTRL) + SP_JMP * i)
#define CLUT_APB_SEL_SHIFT     CLUT_READ_CTRL_APB_SEL_FIELD_OFFSET
#define CLUT_APB_SEL_MASK      0x1 << CLUT_APB_SEL_SHIFT

/* SP_SDW_CTRL */
#define SP_SDW_CTRL_(i)            (REG(REG_AP_APB_DC_SP_SDW_CTRL) + SP_JMP * i)
#define SP_SDW_CTRL_TRIG_SHIFT     SP_SDW_CTRL_TRIG_FIELD_OFFSET
#define SP_SDW_CTRL_TRIG_MASK      0x1 << SP_SDW_CTRL_TRIG_SHIFT
/* MLC */
#define MLC_LAYER_JMP              0x30
#define MLC_LAYER_COUNT            4
#define MLC_PATH_JMP               0x4
#define MLC_PATH_COUNT             5

#define MLC_SF_CTRL_(i)            (REG(REG_AP_APB_DC_MLC_SF_CTRL) + MLC_LAYER_JMP * i)
#define MLC_SF_PROT_VAL_SHIFT      MLC_SF_CTRL_PROT_VAL_FIELD_OFFSET
#define MLC_SF_PROT_VAL_MASK       0x3F << MLC_SF_PROT_VAL_SHIFT
#define MLC_SF_VPOS_PROT_EN_SHIFT  MLC_SF_CTRL_VPOS_PROT_EN_FIELD_OFFSET
#define MLC_SF_VPOS_PROT_EN_MASK   0x1 << MLC_SF_VPOS_PROT_EN_SHIFT
#define MLC_SF_SLOWDOWN_EN_SHIFT   MLC_SF_CTRL_SLOWDOWN_EN_FIELD_OFFSET
#define MLC_SF_SLOWDOWN_EN_MASK    0x1 << MLC_SF_SLOWDOWN_EN_SHIFT
#define MLC_SF_AFLU_PSEL_SHIFT     MLC_SF_CTRL_AFLU_PSEL_FIELD_OFFSET
#define MLC_SF_AFLU_PSEL_MASK      0x1 << MLC_SF_AFLU_PSEL_SHIFT
#define MLC_SF_AFLU_EN_SHIFT       MLC_SF_CTRL_AFLU_EN_FIELD_OFFSET
#define MLC_SF_AFLU_EN_MASK        0x1 << MLC_SF_AFLU_EN_SHIFT
#define MLC_SF_CKEY_EN_SHIFT       MLC_SF_CTRL_CKEY_EN_FIELD_OFFSET
#define MLC_SF_CKEY_EN_MASK        0x1 << MLC_SF_CKEY_EN_SHIFT
#define MLC_SF_G_ALPHA_EN_SHIFT    MLC_SF_CTRL_G_ALPHA_EN_FIELD_OFFSET
#define MLC_SF_G_ALPHA_EN_MASK     0x1 << MLC_SF_G_ALPHA_EN_SHIFT
#define MLC_SF_CROP_EN_SHIFT       MLC_SF_CTRL_CROP_EN_FIELD_OFFSET
#define MLC_SF_CROP_EN_MASK        0x1 << MLC_SF_CROP_EN_SHIFT
#define MLC_SF_EN_SHIFT            MLC_SF_CTRL_SF_EN_FIELD_OFFSET
#define MLC_SF_EN_MASK             0x1 << MLC_SF_EN_SHIFT

#define MLC_SF_H_SPOS_(i)          (REG(REG_AP_APB_DC_MLC_SF_H_SPOS) + MLC_LAYER_JMP * i)
#define MLC_SF_H_SPOS_H_SHIFT      MLC_SF_H_SPOS_H_FIELD_OFFSET
#define MLC_SF_H_SPOS_H_MASK       0x1FFFF << MLC_SF_H_SPOS_H_SHIFT

#define MLC_SF_V_SPOS_(i)          (REG(REG_AP_APB_DC_MLC_SF_V_SPOS) + MLC_LAYER_JMP * i)
#define MLC_SF_V_SPOS_V_SHIFT      MLC_SF_V_SPOS_V_FIELD_OFFSET
#define MLC_SF_V_SPOS_V_MASK       0x1FFFF << MLC_SF_V_SPOS_V_SHIFT

#define MLC_SF_SIZE_(i)            (REG(REG_AP_APB_DC_MLC_SF_SIZE) + MLC_LAYER_JMP * i)
#define MLC_SF_SIZE_V_SHIFT        MLC_SF_SIZE_V_FIELD_OFFSET
#define MLC_SF_SIZE_V_MASK         0xFFFF << MLC_SF_SIZE_V_SHIFT
#define MLC_SF_SIZE_H_SHIFT        MLC_SF_SIZE_H_FIELD_OFFSET
#define MLC_SF_SIZE_H_MASK         0xFFFF << MLC_SF_SIZE_H_SHIFT

#define MLC_SF_CROP_H_POS_(i)      (REG(REG_AP_APB_DC_MLC_SF_CROP_H_POS) + MLC_LAYER_JMP * i)
#define MLC_SF_CROP_V_POS_(i)      (REG(REG_AP_APB_DC_MLC_SF_CROP_V_POS) + MLC_LAYER_JMP * i)
#define MLC_SF_CROP_END_SHIFT      MLC_SF_CROP_H_POS_END_FIELD_OFFSET
#define MLC_SF_CROP_END_MASK       0xFFFF << MLC_SF_CROP_END_SHIFT
#define MLC_SF_CROP_START_SHIFT    MLC_SF_CROP_H_POS_START_FIELD_OFFSET
#define MLC_SF_CROP_START_MASK     0xFFFF << MLC_SF_CROP_START_SHIFT

#define MLC_SF_G_ALPHA_(i)         (REG(REG_AP_APB_DC_MLC_SF_G_ALPHA) + MLC_LAYER_JMP * i)
#define MLC_SF_G_ALPHA_A_SHIFT     MLC_SF_G_ALPHA_A_FIELD_OFFSET
#define MLC_SF_G_ALPHA_A_MASK      0xFF << MLC_SF_G_ALPHA_A_SHIFT

#define MLC_SF_CKEY_ALPHA_(i)      (REG(REG_AP_APB_DC_MLC_SF_CKEY_ALPHA) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_ALPHA_A_SHIFT  MLC_SF_CKEY_ALPHA_A_FIELD_OFFSET
#define MLC_SF_CKEY_ALPHA_A_MASK   0xFF << MLC_SF_CKEY_ALPHA_A_SHIFT

#define MLC_SF_CKEY_R_LV_(i)     (REG(REG_AP_APB_DC_MLC_SF_CKEY_R_LV) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_G_LV_(i)     (REG(REG_AP_APB_DC_MLC_SF_CKEY_G_LV) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_B_LV_(i)     (REG(REG_AP_APB_DC_MLC_SF_CKEY_B_LV) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_LV_UP_SHIFT     MLC_SF_CKEY_R_LV_UP_FIELD_OFFSET
#define MLC_SF_CKEY_LV_UP_MASK      0x3FF << MLC_SF_CKEY_LV_UP_SHIFT
#define MLC_SF_CKEY_LV_DN_SHIFT     MLC_SF_CKEY_R_LV_DN_FIELD_OFFSET
#define MLC_SF_CKEY_LV_DN_MASK      0x3FF << MLC_SF_CKEY_LV_DN_SHIFT

#define MLC_SF_AFLU_TIME_(i)     (REG(REG_AP_APB_DC_MLC_SF_AFLU_TIME) + MLC_LAYER_JMP * i)
#define MLC_SF_AFLU_TIMER_SHIFT  MLC_SF_AFLU_TIME_TIMER_FIELD_OFFSET
#define MLC_SF_AFLU_TIMER_MASK   0xFFFFFFFF << MLC_SF_AFLU_TIMER_SHIFT

#define MLC_PATH_CTRL_(i)        (REG(REG_AP_APB_DC_MLC_PATH_CTRL) + MLC_PATH_JMP * i)
#define ALPHA_BLD_IDX_SHIFT      MLC_PATH_CTRL_ALPHA_BLD_IDX_FIELD_OFFSET
#define ALPHA_BLD_IDX_MASK       0xF << ALPHA_BLD_IDX_SHIFT
#define LAYER_OUT_IDX_SHIFT      MLC_PATH_CTRL_LAYER_OUT_IDX_FIELD_OFFSET
#define LAYER_OUT_IDX_MASK       0xF << LAYER_OUT_IDX_SHIFT

#define MLC_BG_CTRL               REG(REG_AP_APB_DC_MLC_BG_CTRL)
#define BG_A_SHIFT                MLC_BG_CTRL_BG_A_FIELD_OFFSET
#define BG_A_MASK                 0xFF << BG_A_SHIFT
#define AFLU_EN_SHIFT             MLC_BG_CTRL_AFLU_EN_FIELD_OFFSET
#define AFLU_EN_MASK              0x1 << AFLU_EN_SHIFT
#define FSTART_SEL_SHIFT          MLC_BG_CTRL_FSTART_SEL_FIELD_OFFSET
#define FSTART_SEL_MASK           0x7 << FSTART_SEL_SHIFT
#define BG_A_SEL_SHIFT            MLC_BG_CTRL_BG_A_SEL_FIELD_OFFSET
#define BG_A_SEL_MASK             0x1 << BG_A_SEL_SHIFT
#define BG_EN_SHIFT               MLC_BG_CTRL_BG_EN_FIELD_OFFSET
#define BG_EN_MASK                0x1 << BG_EN_SHIFT
#define ALPHA_BLD_BYPS_SHIFT      MLC_BG_CTRL_ALPHA_BLD_BYPS_FIELD_OFFSET
#define ALPHA_BLD_BYPS_MASK       0x1 << ALPHA_BLD_BYPS_SHIFT

#define MLC_BG_COLOR              REG(REG_AP_APB_DC_MLC_BG_COLOR)
#define BG_COLOR_R_SHIFT          MLC_BG_COLOR_R_FIELD_OFFSET
#define BG_COLOR_R_MASK           0x3FF << BG_COLOR_R_SHIFT
#define BG_COLOR_G_SHIFT          MLC_BG_COLOR_G_FIELD_OFFSET
#define BG_COLOR_G_MASK           0x3FF << BG_COLOR_G_SHIFT
#define BG_COLOR_B_SHIFT          MLC_BG_COLOR_B_FIELD_OFFSET
#define BG_COLOR_B_MASK           0x3FF << BG_COLOR_B_SHIFT

#define MLC_BG_AFLU_TIME          REG(REG_AP_APB_DC_MLC_BG_AFLU_TIME)
#define MLC_BG_AFLU_TIMER_SHIFT   MLC_BG_AFLU_TIME_TIMER_FIELD_OFFSET
#define MLC_BG_AFLU_TIMER_MASK    0xFFFFFFFF << MLC_BG_AFLU_TIMER_SHIFT

#define MLC_CANVAS_COLOR          REG(REG_AP_APB_DC_MLC_CANVAS_COLOR)
#define CANVAS_COLOR_R_SHIFT      MLC_CANVAS_COLOR_R_FIELD_OFFSET
#define CANVAS_COLOR_R_MASK       0x3FF << CANVAS_COLOR_R_SHIFT
#define CANVAS_COLOR_G_SHIFT      MLC_CANVAS_COLOR_G_FIELD_OFFSET
#define CANVAS_COLOR_G_MASK       0x3FF << CANVAS_COLOR_G_SHIFT
#define CANVAS_COLOR_B_SHIFT      MLC_CANVAS_COLOR_B_FIELD_OFFSET
#define CANVAS_COLOR_B_MASK       0x3FF << CANVAS_COLOR_B_SHIFT

#define MLC_CLK_RATIO             REG(REG_AP_APB_DC_MLC_CLK_RATIO)
#define MLC_CLK_RATIO_SHIFT       MLC_CLK_RATIO_RATIO_FIELD_OFFSET
#define MLC_CLK_RATIO_MASK        0xFFFF << MLC_CLK_RATIO_SHIFT

#define MLC_INT_MASK              REG(REG_AP_APB_DC_MLC_INT_MASK)
#define MLC_MASK_ERR_L_5_SHIFT    MLC_INT_MASK_ERR_LAYER_5_FIELD_OFFSET
#define MLC_MASK_ERR_L_5_MASK     0x1 << MLC_MASK_ERR_L_5_SHIFT
#define MLC_MASK_ERR_L_4_SHIFT    MLC_INT_MASK_ERR_LAYER_4_FIELD_OFFSET
#define MLC_MASK_ERR_L_4_MASK     0x1 << MLC_MASK_ERR_L_4_SHIFT
#define MLC_MASK_ERR_L_3_SHIFT    MLC_INT_MASK_ERR_LAYER_3_FIELD_OFFSET
#define MLC_MASK_ERR_L_3_MASK     0x1 << MLC_MASK_ERR_L_3_SHIFT
#define MLC_MASK_ERR_L_2_SHIFT    MLC_INT_MASK_ERR_LAYER_2_FIELD_OFFSET
#define MLC_MASK_ERR_L_2_MASK     0x1 << MLC_MASK_ERR_L_2_SHIFT
#define MLC_MASK_ERR_L_1_SHIFT    MLC_INT_MASK_ERR_LAYER_1_FIELD_OFFSET
#define MLC_MASK_ERR_L_1_MASK     0x1 << MLC_MASK_ERR_L_1_SHIFT
#define MLC_MASK_ERR_L_0_SHIFT    MLC_INT_MASK_ERR_LAYER_0_FIELD_OFFSET
#define MLC_MASK_ERR_L_0_MASK     0x1 << MLC_MASK_ERR_L_0_SHIFT
#define MLC_MASK_FLU_L_5_SHIFT    MLC_INT_MASK_FLU_LAYER_5_FIELD_OFFSET
#define MLC_MASK_FLU_L_5_MASK     0x1 << MLC_MASK_FLU_L_5_SHIFT
#define MLC_MASK_FLU_L_4_SHIFT    MLC_INT_MASK_FLU_LAYER_4_FIELD_OFFSET
#define MLC_MASK_FLU_L_4_MASK     0x1 << MLC_MASK_FLU_L_4_SHIFT
#define MLC_MASK_FLU_L_3_SHIFT    MLC_INT_MASK_FLU_LAYER_3_FIELD_OFFSET
#define MLC_MASK_FLU_L_3_MASK     0x1 << MLC_MASK_FLU_L_3_SHIFT
#define MLC_MASK_FLU_L_2_SHIFT    MLC_INT_MASK_FLU_LAYER_2_FIELD_OFFSET
#define MLC_MASK_FLU_L_2_MASK     0x1 << MLC_MASK_FLU_L_2_SHIFT
#define MLC_MASK_FLU_L_1_SHIFT    MLC_INT_MASK_FLU_LAYER_1_FIELD_OFFSET
#define MLC_MASK_FLU_L_1_MASK     0x1 << MLC_MASK_FLU_L_1_SHIFT
#define MLC_MASK_FLU_L_0_SHIFT    MLC_INT_MASK_FLU_LAYER_0_FIELD_OFFSET
#define MLC_MASK_FLU_L_0_MASK     0x1 << MLC_MASK_FLU_L_0_SHIFT
#define MLC_MASK_FRM_END_SHIFT    MLC_INT_MASK_FRM_END_FIELD_OFFSET
#define MLC_MASK_FRM_END_MASK     0x1 << MLC_MASK_FRM_END_SHIFT

#define MLC_INT_STATUS            REG(REG_AP_APB_DC_MLC_INT_STATUS)
#define MLC_S_SLOWD_L_5_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_5_FIELD_OFFSET
#define MLC_S_SLOWD_L_5_MASK        0x1 << MLC_S_SLOWD_L_5_SHIFT
#define MLC_S_SLOWD_L_4_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_4_FIELD_OFFSET
#define MLC_S_SLOWD_L_4_MASK        0x1 << MLC_S_SLOWD_L_4_SHIFT
#define MLC_S_SLOWD_L_3_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_3_FIELD_OFFSET
#define MLC_S_SLOWD_L_3_MASK        0x1 << MLC_S_SLOWD_L_3_SHIFT
#define MLC_S_SLOWD_L_2_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_2_FIELD_OFFSET
#define MLC_S_SLOWD_L_2_MASK        0x1 << MLC_S_SLOWD_L_2_SHIFT
#define MLC_S_SLOWD_L_1_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_1_FIELD_OFFSET
#define MLC_S_SLOWD_L_1_MASK        0x1 << MLC_S_SLOWD_L_1_SHIFT
#define MLC_S_SLOWD_L_0_SHIFT       MLC_INT_STATUS_SLOWD_LAYER_0_FIELD_OFFSET
#define MLC_S_SLOWD_L_0_MASK        0x1 << MLC_S_SLOWD_L_0_SHIFT
#define MLC_S_CROP_E_L_5_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_5_FIELD_OFFSET
#define MLC_S_CROP_E_L_5_MASK       0x1 << MLC_S_CROP_E_L_5_SHIFT
#define MLC_S_CROP_E_L_4_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_4_FIELD_OFFSET
#define MLC_S_CROP_E_L_4_MASK       0x1 << MLC_S_CROP_E_L_4_SHIFT
#define MLC_S_CROP_E_L_3_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_3_FIELD_OFFSET
#define MLC_S_CROP_E_L_3_MASK       0x1 << MLC_S_CROP_E_L_3_SHIFT
#define MLC_S_CROP_E_L_2_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_2_FIELD_OFFSET
#define MLC_S_CROP_E_L_2_MASK       0x1 << MLC_S_CROP_E_L_2_SHIFT
#define MLC_S_CROP_E_L_1_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_1_FIELD_OFFSET
#define MLC_S_CROP_E_L_1_MASK       0x1 << MLC_S_CROP_E_L_1_SHIFT
#define MLC_S_CROP_E_L_0_SHIFT      MLC_INT_STATUS_CROP_ERR_LAYER_0_FIELD_OFFSET
#define MLC_S_CROP_E_L_0_MASK       0x1 << MLC_S_CROP_E_L_0_SHIFT
#define MLC_S_E_L_5_SHIFT           MLC_INT_STATUS_ERR_LAYER_5_FIELD_OFFSET
#define MLC_S_E_L_5_MASK            0x1 << MLC_S_E_L_5_SHIFT
#define MLC_S_E_L_4_SHIFT           MLC_INT_STATUS_ERR_LAYER_4_FIELD_OFFSET
#define MLC_S_E_L_4_MASK            0x1 << MLC_S_E_L_4_SHIFT
#define MLC_S_E_L_3_SHIFT           MLC_INT_STATUS_ERR_LAYER_3_FIELD_OFFSET
#define MLC_S_E_L_3_MASK            0x1 << MLC_S_E_L_3_SHIFT
#define MLC_S_E_L_2_SHIFT           MLC_INT_STATUS_ERR_LAYER_2_FIELD_OFFSET
#define MLC_S_E_L_2_MASK            0x1 << MLC_S_E_L_2_SHIFT
#define MLC_S_E_L_1_SHIFT           MLC_INT_STATUS_ERR_LAYER_1_FIELD_OFFSET
#define MLC_S_E_L_1_MASK            0x1 << MLC_S_E_L_1_SHIFT
#define MLC_S_E_L_0_SHIFT           MLC_INT_STATUS_ERR_LAYER_0_FIELD_OFFSET
#define MLC_S_E_L_0_MASK            0x1 << MLC_S_E_L_0_SHIFT
#define MLC_S_FLU_L_5_SHIFT         MLC_INT_STATUS_FLU_LAYER_5_FIELD_OFFSET
#define MLC_S_FLU_L_5_MASK          0x1 << MLC_S_FLU_L_5_SHIFT
#define MLC_S_FLU_L_4_SHIFT         MLC_INT_STATUS_FLU_LAYER_4_FIELD_OFFSET
#define MLC_S_FLU_L_4_MASK          0x1 << MLC_S_FLU_L_4_SHIFT
#define MLC_S_FLU_L_3_SHIFT         MLC_INT_STATUS_FLU_LAYER_3_FIELD_OFFSET
#define MLC_S_FLU_L_3_MASK          0x1 << MLC_S_FLU_L_3_SHIFT
#define MLC_S_FLU_L_2_SHIFT         MLC_INT_STATUS_FLU_LAYER_2_FIELD_OFFSET
#define MLC_S_FLU_L_2_MASK          0x1 << MLC_S_FLU_L_2_SHIFT
#define MLC_S_FLU_L_1_SHIFT         MLC_INT_STATUS_FLU_LAYER_1_FIELD_OFFSET
#define MLC_S_FLU_L_1_MASK          0x1 << MLC_S_FLU_L_1_SHIFT
#define MLC_S_FLU_L_0_SHIFT         MLC_INT_STATUS_FLU_LAYER_0_FIELD_OFFSET
#define MLC_S_FLU_L_0_MASK          0x1 << MLC_S_FLU_L_0_SHIFT
#define MLC_S_FRM_END_SHIFT         MLC_INT_STATUS_FRM_END_FIELD_OFFSET
#define MLC_S_FRM_END_MASK          0x1 << MLC_S_FRM_END_SHIFT

#define MLC_SF_CTRL_S_(i)           (REG(REG_AP_APB_DC_MLC_SF_CTRL_S) + MLC_LAYER_JMP * i)
#define MLC_SF_H_SPOS_S_(i)         (REG(REG_AP_APB_DC_MLC_SF_H_SPOS_S) + MLC_LAYER_JMP * i)
#define MLC_SF_V_SPOS_S_(i)         (REG(REG_AP_APB_DC_MLC_SF_V_SPOS_S) + MLC_LAYER_JMP * i)
#define MLC_SF_SIZE_S_(i)           (REG(REG_AP_APB_DC_MLC_SF_SIZE_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CROP_H_POS_S_(i)     (REG(REG_AP_APB_DC_MLC_SF_CROP_H_POS_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CROP_V_POS_S_(i)     (REG(REG_AP_APB_DC_MLC_SF_CROP_V_POS_S) + MLC_LAYER_JMP * i)
#define MLC_SF_G_ALPHA_S_(i)        (REG(REG_AP_APB_DC_MLC_SF_G_ALPHA_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_ALPHA_S_(i)     (REG(REG_AP_APB_DC_MLC_SF_CKEY_ALPHA_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_R_LV_S_(i)      (REG(REG_AP_APB_DC_MLC_SF_CKEY_R_LV_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_G_LV_S_(i)      (REG(REG_AP_APB_DC_MLC_SF_CKEY_G_LV_S) + MLC_LAYER_JMP * i)
#define MLC_SF_CKEY_B_LV_S_(i)      (REG(REG_AP_APB_DC_MLC_SF_CKEY_B_LV_S) + MLC_LAYER_JMP * i)
#define MLC_SF_AFLU_TIME_S_(i)      (REG(REG_AP_APB_DC_MLC_SF_AFLU_TIME_S) + MLC_LAYER_JMP * i)
#define MLC_PATH_CTRL_S_(i)         (REG(REG_AP_APB_DC_MLC_PATH_CTRL_S) + MLC_PATH_JMP * i)
#define MLC_BG_CTRL_S               REG(REG_AP_APB_DC_MLC_BG_CTRL_S)
#define MLC_BG_COLOR_S              REG(REG_AP_APB_DC_MLC_BG_COLOR_S)
#define MLC_BG_AFLU_TIME_S          REG(REG_AP_APB_DC_MLC_BG_AFLU_TIME_S)
#define MLC_CANVAS_COLOR_S          REG(REG_AP_APB_DC_MLC_CANVAS_COLOR_S)
#define MLC_CLK_RATIO_S             REG(REG_AP_APB_DC_MLC_CLK_RATIO_S)
#define MLC_INT_MASK_S              REG(REG_AP_APB_DC_MLC_INT_MASK_S)
#define MLC_INT_STATUS_S            REG(REG_AP_APB_DC_MLC_INT_STATUS_S)

/* TCON */
#define KICK_LAYER_JMP              0x8
#define KICK_LAYER_COUNT            18

#define TCON_H_PARA_1               REG(REG_AP_APB_DC_TCON_H_PARA_1)
#define TCON_HACT_SHIFT             TCON_H_PARA_1_HACT_FIELD_OFFSET
#define TCON_HACT_MASK              0xFFFF << TCON_HACT_SHIFT
#define TCON_HTOL_SHIFT             TCON_H_PARA_1_HTOL_FIELD_OFFSET
#define TCON_HTOL_MASK              0xFFFF << TCON_HTOL_SHIFT

#define TCON_H_PARA_2               REG(REG_AP_APB_DC_TCON_H_PARA_2)
#define TCON_HSBP_SHIFT             TCON_H_PARA_2_HSBP_FIELD_OFFSET
#define TCON_HSBP_MASK              0xFFFF << TCON_HSBP_SHIFT
#define TCON_HSYNC_SHIFT            TCON_H_PARA_2_HSYNC_FIELD_OFFSET
#define TCON_HSYNC_MASK             0xFFFF << TCON_HSYNC_SHIFT

#define TCON_V_PARA_1               REG(REG_AP_APB_DC_TCON_V_PARA_1)
#define TCON_VACT_SHIFT             TCON_V_PARA_1_VACT_FIELD_OFFSET
#define TCON_VACT_MASK              0xFFFF << TCON_VACT_SHIFT
#define TCON_VTOL_SHIFT             TCON_V_PARA_1_VTOL_FIELD_OFFSET
#define TCON_VTOL_MASK              0xFFFF << TCON_VTOL_SHIFT

#define TCON_V_PARA_2               REG(REG_AP_APB_DC_TCON_V_PARA_2)
#define TCON_VSBP_SHIFT             TCON_V_PARA_2_VSBP_FIELD_OFFSET
#define TCON_VSBP_MASK              0xFFFF << TCON_VSBP_SHIFT
#define TCON_VSYNC_SHIFT            TCON_V_PARA_2_VSYNC_FIELD_OFFSET
#define TCON_VSYNC_MASK             0xFFFF << TCON_VSYNC_SHIFT


#define TCON_CTRL                   REG(REG_AP_APB_DC_TCON_CTRL)
#define TCON_PIX_SCR_SHIFT          TCON_CTRL_PIX_SCR_FIELD_OFFSET
#define TCON_PIX_SCR_MASK           0x3 << TCON_PIX_SCR_SHIFT
#define TCON_DSP_CLK_EN_SHIFT       TCON_CTRL_DSP_CLK_EN_FIELD_OFFSET
#define TCON_DSP_CLK_EN_MASK        0x1 << TCON_DSP_CLK_EN_SHIFT
#define TCON_DSP_CLK_POL_SHIFT      TCON_CTRL_DSP_CLK_POL_FIELD_OFFSET
#define TCON_DSP_CLK_POL_MASK       0x1 << TCON_DSP_CLK_POL_SHIFT
#define TCON_DE_POL_SHITF           TCON_CTRL_DE_POL_FIELD_OFFSET
#define TCON_DE_POL_MASK            0x1 << TCON_DE_POL_SHITF
#define TCON_VSYNC_POL_SHIFT        TCON_CTRL_VSYNC_POL_FIELD_OFFSET
#define TCON_VSYNC_POL_MASK         0x1 << TCON_VSYNC_POL_SHIFT
#define TCON_HSYNC_POL_SHIFT        TCON_CTRL_HSYNC_POL_FIELD_OFFSET
#define TCON_HSYNC_POL_MASK         0x1 << TCON_HSYNC_POL_SHIFT
#define TCON_EN_SHIFT               TCON_CTRL_EN_FIELD_OFFSET
#define TCON_EN_MASK                0x1 << TCON_EN_SHIFT

#define TCON_LAYER_KICK_COOR_(i)    (REG(REG_AP_APB_DC_TCON_LAYER_KICK_COOR) + KICK_LAYER_JMP * i)
#define TCON_LAYER_KICK_Y_SHIFT     TCON_LAYER_KICK_COOR_Y_FIELD_OFFSET
#define TCON_LAYER_KICK_Y_MASK      0xFFFF << TCON_LAYER_KICK_Y_SHIFT
#define TCON_LAYER_KICK_X_SHIFT     TCON_LAYER_KICK_COOR_X_FIELD_OFFSET
#define TCON_LAYER_KICK_X_MASK      0xFFFF << TCON_LAYER_KICK_X_SHIFT

#define TCON_LAYER_KICK_EN_(i)      (REG(REG_AP_APB_DC_TCON_LAYER_KICK_EN) + KICK_LAYER_JMP * i)
#define TCON_LAYER_KICK_EN_SHIFT    TCON_LAYER_KICK_EN_ENABLE_FIELD_OFFSET
#define TCON_LAYER_KICK_EN_MASK     0x1 << TCON_LAYER_KICK_EN_SHIFT

#define TCON_UNDERRUN_CNT           REG(REG_AP_APB_DC_TCON_UNDERRUN_CNT)
#define TCON_UNDERRUN_S_SHIFT       TCON_UNDERRUN_CNT_STATUS_FIELD_OFFSET
#define TCON_UNDERRUN_S_MASK        0xFFFFFFFF << TCON_UNDERRUN_S_SHIFT


/* DC_CSC */
#define DC_CSC_JMP                  0x1000
#define DC_CSC_COUNT                2
#define DC_CSC_CTRL_(i)             (REG(REG_AP_APB_DC_DC_CSC_CTRL) + DC_CSC_JMP * i)
#define DC_CSC_ALPHA_SHIFT          DC_CSC_CTRL_ALPHA_FIELD_OFFSET
#define DC_CSC_ALPHA_MASK           0x1 << DC_CSC_ALPHA_SHIFT
#define DC_CSC_SBUP_CONV_SHIFT      DC_CSC_CTRL_SBUP_CONV_FIELD_OFFSET
#define DC_CSC_SBUP_CONV_MASK       0x1 << DC_CSC_SBUP_CONV_SHIFT
#define DC_CSC_BYPASS_SHIFT         DC_CSC_CTRL_BYPASS_FIELD_OFFSET
#define DC_CSC_BYPASS_MASK          0x1 << DC_CSC_BYPASS_SHIFT

#define DC_CSC_COEF1_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF1) + DC_CSC_JMP * i)
#define DC_CSC_COEF1_A01_SHIFT      DC_CSC_COEF1_A01_FIELD_OFFSET
#define DC_CSC_COEF1_A01_MASK       0x3FFF << DC_CSC_COEF1_A01_SHIFT
#define DC_CSC_COEF1_A00_SHIFT      DC_CSC_COEF1_A00_FIELD_OFFSET
#define DC_CSC_COEF1_A00_MASK       0x3FFF << DC_CSC_COEF1_A00_SHIFT

#define DC_CSC_COEF2_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF2) + DC_CSC_JMP * i)
#define DC_CSC_COEF2_A10_SHIFT      DC_CSC_COEF2_A10_FIELD_OFFSET
#define DC_CSC_COEF2_A10_MASK       0x3FFF << DC_CSC_COEF2_A10_SHIFT
#define DC_CSC_COEF2_A02_SHIFT      DC_CSC_COEF2_A02_FIELD_OFFSET
#define DC_CSC_COEF2_A02_MASK       0x3FFF << DC_CSC_COEF2_A02_SHIFT

#define DC_CSC_COEF3_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF3) + DC_CSC_JMP * i)
#define DC_CSC_COEF3_A12_SHIFT      DC_CSC_COEF3_A12_FIELD_OFFSET
#define DC_CSC_COEF3_A12_MASK       0x3FFF << DC_CSC_COEF3_A12_SHIFT
#define DC_CSC_COEF3_A11_SHIFT      DC_CSC_COEF3_A11_FIELD_OFFSET
#define DC_CSC_COEF3_A11_MASK       0x3FFF << DC_CSC_COEF3_A11_SHIFT

#define DC_CSC_COEF4_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF4) + DC_CSC_JMP * i)
#define DC_CSC_COEF4_A21_SHIFT      DC_CSC_COEF4_A21_FIELD_OFFSET
#define DC_CSC_COEF4_A21_MASK       0x3FFF << DC_CSC_COEF4_A21_SHIFT
#define DC_CSC_COEF4_A20_SHIFT      DC_CSC_COEF4_A20_FIELD_OFFSET
#define DC_CSC_COEF4_A20_MASK       0x3FFF << DC_CSC_COEF4_A20_SHIFT

#define DC_CSC_COEF5_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF5) + DC_CSC_JMP * i)
#define DC_CSC_COEF5_B0_SHIFT       DC_CSC_COEF5_B0_FIELD_OFFSET
#define DC_CSC_COEF5_B0_MASK        0x3FFF << DC_CSC_COEF5_B0_SHIFT
#define DC_CSC_COEF5_A22_SHIFT      DC_CSC_COEF5_A22_FIELD_OFFSET
#define DC_CSC_COEF5_A22_MASK       0x3FFF << DC_CSC_COEF5_A22_SHIFT

#define DC_CSC_COEF6_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF6) + DC_CSC_JMP * i)
#define DC_CSC_COEF6_B2_SHIFT       DC_CSC_COEF6_B2_FIELD_OFFSET
#define DC_CSC_COEF6_B2_MASK        0x3FFF << DC_CSC_COEF6_B2_SHIFT
#define DC_CSC_COEF6_B1_SHIFT       DC_CSC_COEF6_B1_FIELD_OFFSET
#define DC_CSC_COEF6_B1_MASK        0x3FFF << DC_CSC_COEF6_B1_SHIFT

#define DC_CSC_COEF7_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF7) + DC_CSC_JMP * i)
#define DC_CSC_COEF7_C1_SHIFT       DC_CSC_COEF7_C1_FIELD_OFFSET
#define DC_CSC_COEF7_C1_MASK        0x3FF << DC_CSC_COEF7_C1_SHIFT
#define DC_CSC_COEF7_C0_SHIFT       DC_CSC_COEF7_C0_FIELD_OFFSET
#define DC_CSC_COEF7_C0_MASK        0x3FF << DC_CSC_COEF7_C0_SHIFT

#define DC_CSC_COEF8_(i)            (REG(REG_AP_APB_DC_DC_CSC_COEF8) + DC_CSC_JMP * i)
#define DC_CSC_COEF8_C2_SHIFT       DC_CSC_COEF8_C2_FIELD_OFFSET
#define DC_CSC_COEF8_C2_MASK        0x3FF << DC_CSC_COEF8_C2_SHIFT

#define GAMMA_CTRL                  REG(REG_AP_APB_DC_GAMMA_CTRL)
#define GAMMA_APB_RD_TO_SHIFT       GAMMA_CTRL_APB_RD_TO_FIELD_OFFSET
#define GAMMA_APB_RD_TO_MASK        0xFF << GAMMA_APB_RD_TO_SHIFT
#define GMMA_BYPASS_SHIFT           GAMMA_CTRL_BYPASS_FIELD_OFFSET
#define GMMA_BYPASS_MASK            0x1 << GMMA_BYPASS_SHIFT

#define DITHER_CTRL                 REG(REG_AP_APB_DC_DITHER_CTRL)
#define DITHER_V_DEP_SHIFT          DITHER_CTRL_V_DEP_FIELD_OFFSET
#define DITHER_V_DEP_MASK           0xF << DITHER_V_DEP_SHIFT
#define DITHER_U_DEP_SHIFT          DITHER_CTRL_U_DEP_FIELD_OFFSET
#define DITHER_U_DEP_MASK           0xF << DITHER_U_DEP_SHIFT
#define DITHER_Y_DEP_SHIFT          DITHER_CTRL_Y_DEP_FIELD_OFFSET
#define DITHER_Y_DEP_MASK           0xF << DITHER_Y_DEP_SHIFT
#define DITHER_MODE_12_SHIFT		DITHER_CTRL_MODE_12_FIELD_OFFSET
#define DITHER_MODE_12_MASK			0x1 << DITHER_MODE_12_SHIFT
#define DITHER_SPA_LSB_EXP_MODE_SHIFT	DITHER_CTRL_SPA_LSB_EXP_MODE_FIELD_OFFSET
#define DITHER_SPA_LSB_EXP_MODE_MASK	0x3 << DITHER_SPA_LSB_EXP_MODE_SHIFT
#define DITHER_SPA_1ST_SHIFT		DITHER_CTRL_SPA_1ST_FIELD_OFFSET
#define DITHER_SPA_1ST_MASK			0x3 << DITHER_SPA_1ST_SHIFT
#define DITHER_SPA_EN_SHIFT         DITHER_CTRL_SPA_EN_FIELD_OFFSET
#define DITHER_SPA_EN_MASK          0x1 << DITHER_SPA_EN_SHIFT
#define DITHER_TEM_EN_SHIFT    		DITHER_CTRL_TEM_EN_FIELD_OFFSET
#define DITHER_TEM_EN_MASK    		0x1 << DITHER_TEM_EN_SHIFT
#define DITHER_BYPASS_SHIFT   		DITHER_CTRL_BYPASS_FIELD_OFFSET
#define DITHER_BYPASS_MASK    		0x1 << DITHER_BYPASS_SHIFT



/* CRC32 */
#define CRC_BLK_JMP                 0x4
#define CRC_BLK_COUNT               8

#define CRC32_CTRL                  REG(REG_AP_APB_DC_CRC32_CTRL)
#define CRC32_VSYNC_POL_SHIFT       CRC32_CTRL_VSYNC_POL_FIELD_OFFSET
#define CRC32_VSYNC_POL_MASK        0x1 << CRC32_VSYNC_POL_SHIFT
#define CRC32_HSYNC_POL_SHIFT       CRC32_CTRL_HSYNC_POL_FIELD_OFFSET
#define CRC32_HSYNC_POL_MASK        0x1 << CRC32_HSYNC_POL_SHIFT
#define CRC32_DATA_EN_POL_SHIFT     CRC32_CTRL_DATA_EN_POL_FIELD_OFFSET
#define CRC32_DATA_EN_POL_MASK      0x1 << CRC32_DATA_EN_POL_SHIFT
#define CRC32_GLOBAL_ENABLE_SHIFT   CRC32_CTRL_GLOBAL_ENABLE_FIELD_OFFSET
#define CRC32_GLOBAL_ENABLE_MASK    0x1 << CRC32_GLOBAL_ENABLE_SHIFT

#define CRC32_INT_ST                REG(REG_AP_APB_DC_CRC32_INT_ST)
#define CRC32_INT_MASK              REG(REG_AP_APB_DC_CRC32_INT_MASK)
#define CRC_ERROR_7_SHIFT           CRC32_INT_ST_CRC_ERROR_7_FIELD_OFFSET
#define CRC_ERROR_7_MASK            0x1 << CRC_ERROR_7_SHIFT
#define CRC_ERROR_6_SHIFT           CRC32_INT_ST_CRC_ERROR_6_FIELD_OFFSET
#define CRC_ERROR_6_MASK            0x1 << CRC_ERROR_6_SHIFT
#define CRC_ERROR_5_SHIFT           CRC32_INT_ST_CRC_ERROR_5_FIELD_OFFSET
#define CRC_ERROR_5_MASK            0x1 << CRC_ERROR_5_SHIFT
#define CRC_ERROR_4_SHIFT           CRC32_INT_ST_CRC_ERROR_4_FIELD_OFFSET
#define CRC_ERROR_4_MASK            0x1 << CRC_ERROR_4_SHIFT
#define CRC_ERROR_3_SHIFT           CRC32_INT_ST_CRC_ERROR_3_FIELD_OFFSET
#define CRC_ERROR_3_MASK            0x1 << CRC_ERROR_3_SHIFT
#define CRC_ERROR_2_SHIFT           CRC32_INT_ST_CRC_ERROR_2_FIELD_OFFSET
#define CRC_ERROR_2_MASK            0x1 << CRC_ERROR_2_SHIFT
#define CRC_ERROR_1_SHIFT           CRC32_INT_ST_CRC_ERROR_1_FIELD_OFFSET
#define CRC_ERROR_1_MASK            0x1 << CRC_ERROR_1_SHIFT
#define CRC_ERROR_0_SHIFT           CRC32_INT_ST_CRC_ERROR_0_FIELD_OFFSET
#define CRC_ERROR_0_MASK            0x1 << CRC_ERROR_0_SHIFT
#define CRC_DONE_7_SHIFT            CRC32_INT_ST_CRC_DONE_7_FIELD_OFFSET
#define CRC_DONE_7_MASK             0x1 << CRC_DONE_7_SHIFT
#define CRC_DONE_6_SHIFT            CRC32_INT_ST_CRC_DONE_6_FIELD_OFFSET
#define CRC_DONE_6_MASK             0x1 << CRC_DONE_6_SHIFT
#define CRC_DONE_5_SHIFT            CRC32_INT_ST_CRC_DONE_5_FIELD_OFFSET
#define CRC_DONE_5_MASK             0x1 << CRC_DONE_5_SHIFT
#define CRC_DONE_4_SHIFT            CRC32_INT_ST_CRC_DONE_4_FIELD_OFFSET
#define CRC_DONE_4_MASK             0x1 << CRC_DONE_4_SHIFT
#define CRC_DONE_3_SHIFT            CRC32_INT_ST_CRC_DONE_3_FIELD_OFFSET
#define CRC_DONE_3_MASK             0x1 << CRC_DONE_3_SHIFT
#define CRC_DONE_2_SHIFT            CRC32_INT_ST_CRC_DONE_2_FIELD_OFFSET
#define CRC_DONE_2_MASK             0x1 << CRC_DONE_2_SHIFT
#define CRC_DONE_1_SHIFT            CRC32_INT_ST_CRC_DONE_1_FIELD_OFFSET
#define CRC_DONE_1_MASK             0x1 << CRC_DONE_1_SHIFT
#define CRC_DONE_0_SHIFT            CRC32_INT_ST_CRC_DONE_0_FIELD_OFFSET
#define CRC_DONE_0_MASK             0x1 << CRC_DONE_0_SHIFT

#define CRC32_BLOCK_CTRL0_(i)       (REG(REG_AP_APB_DC_CRC32_BLOCK_CTRL0) + CRC_BLK_JMP * i)
#define CRC32_BLOCK_ENABLE_SHIFT    CRC32_BLOCK_CTRL0_ENABLE_FIELD_OFFSET
#define CRC32_BLOCK_ENABLE_MASK     0x1 << CRC32_BLOCK_ENABLE_SHIFT
#define CRC32_BLOCK_LOCK_SHIFT      CRC32_BLOCK_CTRL0_LOCK_FIELD_OFFSET
#define CRC32_BLOCK_LOCK_MASK       0X1 << CRC32_BLOCK_LOCK_SHIFT
#define CRC32_POS_START_Y_SHIFT     CRC32_BLOCK_CTRL0_POS_START_Y_FIELD_OFFSET
#define CRC32_POS_START_Y_MASK      0x3FFF << CRC32_POS_START_Y_SHIFT
#define CRC32_POS_START_X_SHIFT     CRC32_BLOCK_CTRL0_POS_START_X_FIELD_OFFSET
#define CRC32_POS_START_X_MASK      0x3FFF << CRC32_POS_START_X_SHIFT

#define CRC32_BLOCK_CTRL1_(i)       (REG(REG_AP_APB_DC_CRC32_BLOCK_CTRL1) + CRC_BLK_JMP * i)
#define CRC32_POS_END_Y_SHIFT       CRC32_BLOCK_CTRL1_POS_END_Y_FIELD_OFFSET
#define CRC32_POS_END_Y_MASK        0x3FFF << CRC32_POS_END_Y_SHIFT
#define CRC32_POS_END_X_SHIFT       CRC32_BLOCK_CTRL1_POS_END_X_FIELD_OFFSET
#define CRC32_POS_END_X_MASK        0x3FFF << CRC32_POS_END_X_SHIFT

#define CRC32_BLOCK_EXPECT_DATA_(i) (REG(REG_AP_APB_DC_CRC32_BLOCK_EXPECT_DATA) + CRC_BLK_JMP * i)
#define CRC32_EXPECT_DATA_SHIFT     CRC32_BLOCK_EXPECT_DATA_EXPECT_DATA_FIELD_OFFSET
#define CRC32_EXPECT_DATA_MASK      0xFFFFFFFF << CRC32_EXPECT_DATA_SHIFT

#define CRC32_BLOCK_RESULT_DATA_(i) (REG(REG_AP_APB_DC_CRC32_BLOCK_RESULT_DATA) + CRC_BLK_JMP * i)
#define CRC32_RESULT_DATA_SHIFT     CRC32_BLOCK_RESULT_DATA_RESULT_DATA_FIELD_OFFSET
#define CRC32_RESULT_DATA_MASK      0xFFFFFFFF << CRC32_RESULT_DATA_SHIFT
